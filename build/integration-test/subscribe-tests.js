// Generated by CoffeeScript 1.4.0
(function() {
  var Scrud, assert, expect, sinon;

  expect = require("./expect.js");

  sinon = require("sinon");

  Scrud = require("./Scrud.js");

  assert = new expect.Assertion;

  suite('Existing entities', function() {
    test('If there are no existing models on the server the collection size should be 0', function() {
      var allHouses;
      allHouses = House.createCollection();
      allHouses.activate();
      return expect(allHouses.size()).to.equal(0);
    });
    test('If there are existing models on the server, the collection should be populated', function() {
      var allHouses;
      allHouses = House.createCollection();
      allHouses.activate();
      return expect(allHouses.size()).to.equal(0);
    });
    return test('Where a model on the server is returned which already exists on the client, no new object should be created', function() {
      var allHouses, createHouse, house, sendCreateResponse;
      allHouses = House.createCollection();
      createHouse = function() {
        var house;
        house = new House();
        house.set("doorNumber", 4);
        house.save(connectCollection);
        return house;
      };
      sendCreateResponse = function() {};
      house = createHouse();
      sendCreateResponse();
      allHouses.activate();
      expect(allHouses.size()).to.equal(1);
      return expect(house).to.equal(allHouses.getAll[0]);
    });
  });

  suite('Created entities', function() {
    return test('Entities are created', function() {
      var allHouses;
      allHouses = House.createCollection();
      allHouses.activate();
      expect(allHouses.size()).to.equal(0);
      return expect(allHouses.size()).to.equal(1);
    });
  });

}).call(this);
