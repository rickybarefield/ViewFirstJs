// Generated by CoffeeScript 1.4.0
(function() {
  var ViewFirstModel, ViewFirstRouter, _,
    __bind = function(fn, me){ return function(){ return fn.apply(me, arguments); }; };

  _ = require("./underscore-dep");

  ViewFirstModel = require("./ViewFirstModel");

  module.exports = ViewFirstRouter = (function() {
    var deriveNamedModelString, handleBackButton, locationRegex, namedModelRegex;

    function ViewFirstRouter(viewFirst) {
      this.viewFirst = viewFirst;
      this.destroy = __bind(this.destroy, this);

      this.initialize = __bind(this.initialize, this);

      this.refresh = __bind(this.refresh, this);

      this.baseUrl = location.protocol + '//' + location.host + location.pathname;
    }

    locationRegex = /#([^|]*)\|?(.*)/;

    namedModelRegex = /([^=]*)=([^!]*)!(.*)/;

    handleBackButton = function(event) {
      var matches, modelId, modelName, modelType, namedModelString, namedModelStrings, parsedString, viewName, _i, _len, _ref, _results;
      matches = locationRegex.exec(location.hash);
      viewName = matches[1];
      namedModelStrings = matches[2];
      if (viewName != null) {
        this.viewFirst.render(viewName);
        if ((namedModelStrings != null) && namedModelStrings !== "") {
          _ref = namedModelStrings.split("|");
          _results = [];
          for (_i = 0, _len = _ref.length; _i < _len; _i++) {
            namedModelString = _ref[_i];
            parsedString = namedModelRegex.exec(namedModelString);
            modelName = parsedString[1];
            modelType = parsedString[2];
            modelId = parsedString[3];
            _results.push(this.viewFirst.setNamedModel(modelName, ViewFirstModel.find(modelType, modelId)));
          }
          return _results;
        }
      }
    };

    ViewFirstRouter.prototype.refresh = function() {
      return handleBackButton.call(this);
    };

    ViewFirstRouter.prototype.initialize = function() {
      var _this = this;
      this.backButtonCallback = function() {
        return handleBackButton.call(_this);
      };
      return window.addEventListener("popstate", this.backButtonCallback);
    };

    ViewFirstRouter.prototype.destroy = function() {
      return window.removeEventListener("popstate", this.backButtonCallback);
    };

    deriveNamedModelString = function(namedModels) {
      var container, name, namedModelStrings;
      namedModelStrings = (function() {
        var _ref, _results;
        _results = [];
        for (name in namedModels) {
          container = namedModels[name];
          if (((container != null ? (_ref = container.model) != null ? _ref.isPersisted : void 0 : void 0) != null) && container.model.isPersisted()) {
            _results.push("" + name + "=" + container.model.constructor.modelName + "!" + (container.model.get("id")));
          }
        }
        return _results;
      })();
      return namedModelStrings.join("|");
    };

    ViewFirstRouter.prototype.update = function() {
      var namedModelString;
      namedModelString = deriveNamedModelString(this.viewFirst.namedModels);
      if (namedModelString !== "") {
        namedModelString = "|" + namedModelString;
      }
      return history.pushState(null, null, "" + this.baseUrl + "#" + this.viewFirst.currentView + namedModelString);
    };

    return ViewFirstRouter;

  })();

}).call(this);
