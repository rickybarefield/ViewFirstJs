// Generated by CoffeeScript 1.4.0
(function() {

  $(function() {
    var newTodo, todoDescription, todoItems, todoRow, viewFirst;
    viewFirst = new ViewFirst("todo");
    todoItems = function(viewFirst, node, argMap) {
      var $node, template;
      $node = $(node);
      template = $node.children("div");
      template.detach();
      viewFirst.bindCollection(allTodos, node, function(todo) {
        var deleteButton, input, todoDiv;
        todoDiv = template.clone();
        input = todoDiv.children("input");
        todoDiv.dblclick(function() {
          input.addClass("editing");
          input.prop("disabled", false);
          return input.focus();
        });
        input.blur(function() {
          input.removeClass("editing");
          return input.prop("disabled", true);
        });
        input.keypress(function(key) {
          if (key.which === 13) {
            return input.blur();
          }
        });
        input.focus(function() {
          return viewFirst.setNamedModel("currentTodo", todo);
        });
        deleteButton = todoDiv.children("button");
        deleteButton.click(function() {
          todo.destroy();
          return todoDiv.detach();
        });
        return todoDiv.get(0);
      });
      return node;
    };
    newTodo = function(viewFirst, node, argMap) {
      var $node;
      $node = $(node);
      $node.keypress(function(key) {
        var name;
        name = $node.val();
        if (key.which === 13 && (name != null)) {
          newTodo = new Todo({
            name: name,
            description: ""
          });
          console.log("adding");
          allTodos.add(newTodo);
          newTodo.save();
          return $node.val("");
        }
      });
      return node;
    };
    todoDescription = function(viewFirst, node, argMap) {
      var $node;
      $node = $(node);
      $node.hide();
      viewFirst.addNamedModelEventListener("currentTodo", function(oldModel, newModel) {
        if (newModel != null) {
          viewFirst.bindNodeValues(node, newModel);
          return $node.show(100);
        } else {
          $node.val("");
          return $node.hide();
        }
      });
      return node;
    };
    todoRow = function(viewFirst, node, argMap) {
      var $node, $parent, $template;
      $node = $(node);
      $parent = $node.parent();
      $template = $node.detach();
      viewFirst.bindCollection(allTodos, $parent, function() {
        return $template.clone().get(0);
      });
      return null;
    };
    viewFirst.addSnippet("todoRow", todoRow);
    viewFirst.addSnippet("todoItems", todoItems);
    viewFirst.addSnippet("todoDescription", todoDescription);
    viewFirst.addSnippet("newTodo", newTodo);
    return viewFirst.initialize();
  });

}).call(this);
