// Generated by CoffeeScript 1.4.0
(function() {

  define([], function() {
    var TemplatingSnippets;
    return TemplatingSnippets = (function() {

      function TemplatingSnippets() {}

      TemplatingSnippets.add = function(viewFirst) {
        viewFirst.addSnippet("surround", this.surroundSnippet);
        return viewFirst.addSnippet("embed", this.embedSnippet);
      };

      TemplatingSnippets.surroundSnippet = function(viewFirst, node, argumentMap) {
        var at, nodes, surroundingContent, surroundingName, surroundingView;
        nodes = node.contents();
        console.log("_surroundSnippet invoked with " + node);
        surroundingName = argumentMap['with'];
        at = argumentMap['at'];
        surroundingView = viewFirst.findView(surroundingName);
        if (surroundingView == null) {
          throw "Unable to find surrounding template '" + surroundingName + "'";
        }
        surroundingContent = $(surroundingView.getElement());
        if (at != null) {
          TemplatingSnippets.bind(surroundingContent, nodes, at);
        } else {
          TemplatingSnippets.bindParts(surroundingContent, nodes);
        }
        return surroundingContent;
      };

      TemplatingSnippets.bindParts = function(surroundingContent, nodes) {
        var at, child, _i, _len, _results;
        _results = [];
        for (_i = 0, _len = nodes.length; _i < _len; _i++) {
          child = nodes[_i];
          at = $(child).attr("data-at");
          if (at != null) {
            _results.push(this.bind(surroundingContent, child.childNodes, at));
          } else {
            _results.push(void 0);
          }
        }
        return _results;
      };

      TemplatingSnippets.bind = function(surroundingContent, html, at) {
        var bindElement;
        bindElement = surroundingContent.find("[data-bind-name='" + at + "']");
        return bindElement.replaceWith(html);
      };

      TemplatingSnippets.embedSnippet = function(viewFirst, html, argumentMap) {
        var embeddedView, templateName;
        templateName = argumentMap['template'];
        embeddedView = viewFirst.findView(templateName);
        if (embeddedView == null) {
          throw "Unable to find template to embed '" + templateName + "'";
        }
        return $(embeddedView.getElement()).clone();
      };

      return TemplatingSnippets;

    }).call(this);
  });

}).call(this);
