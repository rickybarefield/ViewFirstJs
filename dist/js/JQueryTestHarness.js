// Generated by CoffeeScript 1.4.0
(function() {

  define(["expect", "jquery"], function(Expect, $) {
    var JQueryTestHarness;
    JQueryTestHarness = (function() {

      function JQueryTestHarness() {}

      JQueryTestHarness._expectations = {};

      JQueryTestHarness.addExpectation = function(objectToMockMethodOn, methodName, func) {
        var expectations, getExpectationArray;
        getExpectationArray = function(name) {
          var expectationArray;
          expectationArray = JQueryTestHarness._expectations[name];
          if (!expectationArray) {
            expectationArray = JQueryTestHarness._expectations[name] = [];
          }
          return expectationArray;
        };
        expectations = getExpectationArray(methodName);
        expectations.push(func);
        return objectToMockMethodOn[methodName] = function() {
          return JQueryTestHarness._mockMethod.call(this, methodName, arguments);
        };
      };

      JQueryTestHarness.assertAllExpectationsMet = function() {
        if (!$.isEmptyObject(JQueryTestHarness._expectations)) {
          throw "Not all expectations have been met";
        }
      };

      JQueryTestHarness._mockMethod = function(methodName, givenArguments) {
        var expectations, func;
        expectations = JQueryTestHarness._expectations[methodName];
        if (!(expectations != null) || expectations.length === 0) {
          throw "A call on " + methodName + " was not expected";
        }
        func = expectations.pop();
        if (expectations.length === 0) {
          delete JQueryTestHarness._expectations[methodName];
        }
        return func.apply(this, givenArguments);
      };

      return JQueryTestHarness;

    })();
    return JQueryTestHarness;
  });

}).call(this);
